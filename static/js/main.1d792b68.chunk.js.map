{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.jsx","Components/Statistics/Statistics.jsx","App.js","index.js"],"names":["FeedbackOptions","title","options","onLeaveFeedback","map","label","name","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","useState","stateGood","setStateGood","stateNeutral","setStateNeutral","stateBad","setStateBad","option","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAoBeA,EApBS,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,+BACGF,EACAC,EAAQE,KAAI,SAAAC,GAAK,OAChB,6BACE,wBACEC,KAAMD,EAENE,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAJIA,YCJFI,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2BEC,EA1BI,SAAC,GAOb,IANLV,EAMI,EANJA,MACAW,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,qCACE,4BAAIf,IACHW,GAAQC,GAAWC,EAClB,+BACE,wCAAWF,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,EAAMH,EAAMC,EAASC,MACjC,qDAAwBE,EAAmBJ,EAAMC,EAASC,SAG5D,cAAC,EAAD,CAAcJ,QAAQ,0BCqCfO,EAvDH,WACV,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAiCA,OACE,qCACE,cAAC,EAAD,CACEvB,MAAM,wBACNC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAxBkB,SAAAsB,GACtB,OAAQA,GACN,IAAK,OACHL,GAAa,SAAAM,GAAS,OAAIA,EAAY,KACtC,MAEF,IAAK,UACHJ,GAAgB,SAAAI,GAAS,OAAIA,EAAY,KACzC,MAEF,IAAK,MACHF,GAAY,SAAAE,GAAS,OAAIA,EAAY,SAevC,cAAC,EAAD,CACEzB,MAAM,aACNW,KAAMO,EACNN,QAASQ,EACTP,IAAKS,EACLR,MA3CqB,SAACI,EAAWE,EAAcE,GACnD,OAAOJ,EAAYE,EAAeE,GA2C9BP,mBAxCkC,SACtCG,EACAE,EACAE,GAEA,OAAO,MAAQJ,EAAYE,EAAeE,GAAYJ,GAAa,W,YCXvEQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d792b68.chunk.js","sourcesContent":["const FeedbackOptions = ({ title, options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul>\r\n      {title}\r\n      {options.map(label => (\r\n        <li>\r\n          <button\r\n            name={label}\r\n            key={label}\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(label)}\r\n          >\r\n            {label}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({\r\n  title,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p>{title}</p>\r\n      {good || neutral || bad ? (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total(good, neutral, bad)}</li>\r\n          <li>Positive feedback: {positivePercentage(good, neutral, bad)}</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import { useState } from 'react';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './Components/Statistics/Statistics';\n\nconst App = () => {\n  const [stateGood, setStateGood] = useState(0);\n  const [stateNeutral, setStateNeutral] = useState(0);\n  const [stateBad, setStateBad] = useState(0);\n\n  const countTotalFeedback = (stateGood, stateNeutral, stateBad) => {\n    return stateGood + stateNeutral + stateBad;\n  };\n\n  const countPositiveFeedbackPercentage = (\n    stateGood,\n    stateNeutral,\n    stateBad,\n  ) => {\n    return 100 / ((stateGood + stateNeutral + stateBad) / stateGood) + '%';\n  };\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setStateGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setStateNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setStateBad(prevState => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <FeedbackOptions\n        title=\"Please leave feedback\"\n        options={['good', 'neutral', 'bad']}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n      <Statistics\n        title=\"Statistics\"\n        good={stateGood}\n        neutral={stateNeutral}\n        bad={stateBad}\n        total={countTotalFeedback}\n        positivePercentage={countPositiveFeedbackPercentage}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}